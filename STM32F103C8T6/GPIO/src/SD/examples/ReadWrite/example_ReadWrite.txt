/*
 * Project convert STM32 to Arduino
 *
 *	Done: SPI1, USART1
 *
 *  Created on: Aug 8, 2018
 *      Author: Van_BasTai
 */

/* include */

#include <include.h>
//#include <Wire/Wire.h>
#include <Serial/Serial.h>
#include <SPI/SPIClass.h>
#include <SD/SD.h>
//#include <Liquid_LCD/LiquidCrystal_SPi.h>


/* Private define */

/* Private typedef */

/* Private function prototypes */

/* Private functions */

/* Private vraiable */
int receiveData = 0;
File myFile;
/************************************************************/
/*                  MAIN FUNCTION							*/
/************************************************************/
int main(void)
{
	SysTick_Init();
	Serial.begin(115200);	// Initialize serial communications with the PC

	Serial.println("Scan PICC to see UID and type...");

	pinMode(C13, OUTPUT);
	Serial.print("Initializing SD card...");

	if (!SD.begin(SPI1_PIN_NSS))
	{
		Serial.println("initialization failed!");
		while (1);
	}
	Serial.println("initialization done.");

	  // open the file. note that only one file can be open at a time,
	  // so you have to close this one before opening another.
	  myFile = SD.open("test.txt", FILE_WRITE);

	  // if the file opened okay, write to it:
	  if (myFile) {
	    Serial.print("Writing to test.txt...");
	    myFile.println("testing 1, 2, 3.");
	    // close the file:
	    myFile.close();
	    Serial.println("done.");
	  } else {
	    // if the file didn't open, print an error:
	    Serial.println("error opening test.txt");
	  }

	  // re-open the file for reading:
	  myFile = SD.open("test.txt");
	  if (myFile) {
	    Serial.println("test.txt:");

	    // read from the file until there's nothing else in it:
	    while (myFile.available()) {
	      Serial.write(myFile.read());
	    }
	    // close the file:
	    myFile.close();
	  } else {
	    // if the file didn't open, print an error:
	    Serial.println("error opening test.txt");
	  }
	while (1)
	{
		digitalToggle(C13);
		delay(1000);
	}
}
